user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  resolver 127.0.0.11 valid=10s;
  
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  server {
    listen       443 ssl;
    ssl_certificate     /etc/nginx/site.crt;
    ssl_certificate_key /etc/nginx/site.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    server_name  localhost;
    proxy_cache_bypass  $http_upgrade;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;
    proxy_buffers                      32 8k;
    proxy_buffer_size                  8k;
    large_client_header_buffers        4 32k;
    set $session_name nginx_session;

    location /kibana {
      resolver 127.0.0.11 valid=10s;
      set $dashboards_backend opensearch-dashboards;
      proxy_pass http://$dashboards_backend:5601$request_uri;
    }
    location /auth/ {
      resolver 127.0.0.11 valid=10s;
    #   proxy_redirect http://localhost/auth/openid /kibana/auth/openid; # SERVER_BASEPATH setting does not appear to apply to kibana auth headers.  Removed this after setting openid basepath in opensearch_dashboards.yml
      set $keycloak_backend keycloak;
      proxy_pass http://$keycloak_backend:8080$request_uri;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
    expires           0;
    add_header        Cache-Control private;
  }
}
